akka {
  loglevel = DEBUG
}

spray.can.server {
  request-timeout = 10s
}

oauth-token-db {
  url = "jdbc:h2:mem:oauth;DB_CLOSE_DELAY=-1"
  driver = "org.h2.Driver"
  user = ""
  password = ""
}

test-issuer = "https://ping.company.com"
test-issuer = ${?TEST_ISSUER}

oauth {
  http {
    interface = "0.0.0.0"
    port = 8080
  }
  clients {
    blah {
      grant-type = "authorization_code" # must be one of authorization_code or client_credentials
      client-id = "CLIENT_ID" # enter client-id provided by ping here or in application_private.conf file
      client-secret = "SECRET" # shouldn't need for resource owner grant, but necessary since this client has one established
      api-redirect-uri = "http://localhost:8080/api/PingIdentityAuthCode"
    }
    hello-authcode-client {
      grant-type = "authorization_code" # must be one of authorization_code or client_credentials
      client-id = "CLIENT_ID" # enter client-id provided by ping here or in application_private.conf file
      client-secret = "SECRET" # shouldn't need for resource owner grant, but necessary since this client has one established
      api-redirect-uri = "http://localhost:8080/api/PingIdentityAuthCode"
    }
    hello-client_credentials-client {
      grant-type = "client_credentials"
      client-id = "CLIENT_ID" # enter client-id provided by ping here or in application_private.conf file
      client-secret = "SECRET" # enter client-secret provided by ping here or in application_private.conf file
    }
    hello-resource_owner-client {
      grant-type = "password"
      client-id = "CLIENT_ID" # enter client-id provided by ping here or in application_private.conf file
      client-secret = "SECRET" # shouldn't need for resource owner grant, but necessary since this client has one established
      username = "NA1000TPS-CI"
      userpw = "SECRET"
    }
  }
  provider {
    authUrl = "https://ping.company.com/as/authorization.oauth2"
    accessTokenUrl = "https://ping.company.com/as/token.oauth2"
    authHeaderName = "Authorization"
    authHeaderPrefix = "Bearer "
    idHeaderName = "OIDC_ID_Token"
    idHeaderPrefix = "id_token "
    validation-uri = "https://ping.company.com/as/token.oauth2"
    jwksUri = "https://ping.company.com/pf/JWKS"
    jwksUri = ${?JWKS_URI}
    access-token-JWT-key-url = ${?X509_OAUTH_KEY_URI}
    validation-grant-type = "urn:pingidentity.com:oauth2:grant_type:validate_bearer"
    provider-wants-basic-auth = false
  }
}
